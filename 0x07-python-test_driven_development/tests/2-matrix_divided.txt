==========================
Using 2-matrix_divided.py
==========================

This module defines a function ``matrix_divided(matrix, div)``
that divides all elements of a matrix.

:: importing function from the module
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided


:: 
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ...    ]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix = [
    ...     [4, -12.5, 1.99],
    ...     [-21, 23, 0.8]
    ...     ]
    >>> matrix_divided(matrix, 4)
    [[1.0, -3.12, 0.5], [-5.25, 5.75, 0.2]]


:: matrix must a list of lists of integers or floats
    >>> matrix = [
    ...     [1, 5, 3],
    ...     [4, 5, 6],
    ...     "strings"
    ...    ]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [
    ...     (4, 4, 5),
    ...     [],
    ...     "strings"
    ...    ]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = []
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = None
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = (7, 9)
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats


:: Each row pf the matrix must be of the same size
    >>> matrix = [
    ...     [3, 5, 0.543, 34],
    ...     [5, -34.3, 5.46]
    ...     ]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size


:: ``div`` must be a number (integer or float)
    >>> matrix = [
    ...     [3, 4.3, 6.4],
    ...     [-4, -3.6, 3.5]
    ...     ]
    >>> matrix_divided(matrix, "div")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

    >>> matrix = [
    ...     [3, 4.3, 6.4],
    ...     [-4, -3.6, 3.5]
    ...     ]
    >>> matrix_divided(matrix, None)
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

    >>> matrix = [
    ...     [3, 4.3, 6.4],
    ...     [-4, -3.6, 3.5]
    ...     ]
    >>> matrix_divided(matrix, 'nan')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

    >>> matrix = [
    ...     [3, 4.3, 6.4],
    ...     [-4, -3.6, 3.5]
    ...     ]
    >>> matrix_divided(matrix, float('inf'))
    Traceback (most recent call last):
        ...
    TypeError: div must be a number



:: ``div`` can't be equal to 0
    >>> matrix = [
    ...     [3, 4.3, 6.4],
    ...     [-4, -3.6, 3.5]
    ...     ]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

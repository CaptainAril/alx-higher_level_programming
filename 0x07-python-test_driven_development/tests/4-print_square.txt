=======================
Using 4-print_square.py
=======================
This module defines a function ``print_square(size)``
that prints a square with the character '#'.

:: Importing function from the module.
    >>> print_square = __import__('4-print_square').print_square

::
    >>> print_square(3)
    ###
    ###
    ###
    >>> print_square(3*2)
    ######
    ######
    ######
    ######
    ######
    ######
    >>> print_square(0)


:: Test case for `size` less than 0 or not an integer.
    >>> print_square(-3)
    Traceback (most recent call last):
        ...
    ValueError: size must be >= 0

    >>> print_square("size")
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

    >>> print_square(0.534)
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

    >>> print_square("-58.334")
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

    >>> print_square([3])
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

    >>> print_square("NaN")
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

    >>> print_square(float("inf"))
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

:: no size input
    >>> print_square()
    Traceback (most recent call last):
        ...
    TypeError: print_square() missing 1 required positional argument: 'size'
